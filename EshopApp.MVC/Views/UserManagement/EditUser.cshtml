@model EditUserViewModel

@{
    ViewData["Title"] = "Edit Account";
    List<UiRole>? roles = ViewData["UserRoles"] as List<UiRole>;
    string? userRoleName = roles is not null ? roles.Where(role => Model.EditUserRoleViewModel.CurrentRoleId == role.Id).FirstOrDefault()!.Name! : null;
}

<style>
    .button-switcher {
        display: flex;
        border: none;
    }

    .button-switcher button {
        flex: 1;
        border: 1px solid #ced4da;
        padding: 7px;
        color: black;
        background-color: white;
    }

    .button-switcher .active {
        background: #FF5E00;
        color: white;
    }

    .button-switcher button.inactive:hover {
        border-color: #FF5E00 !important;
        box-shadow: 0px 0px 5px #FF5E00 !important;
    }

    .form-check-input {
      width: 1.5rem !important;
      height: 1.5rem !important;
       border: 1px solid #ced4da !important
    }
</style>

<div class="row">
    <div class="d-flex justify-content-center d-lg-none mx-auto" style="max-width:500px;">
        <div class="button-switcher mb-4" style="width:66%;">
            <button id="btnBasicSettings" class="active" onclick="toggleAuthenticationForm('basicSettingsSection')" style="border-right:0;"><i class="fas fa-unlock me-2 d-lg-none"></i>Στοιχεία</button>
            <button id="btnSensitiveSettings" class="inactive" onclick="toggleAuthenticationForm('sensitiveSettingsSection')" style="border-left:0;"><i class="fas fa-lock me-2 d-lg-none"></i>Στοιχεία</button>
        </div>
    </div>
    <form class="col-lg-4 d-lg-block col-12 flex-column align-items-center d-flex mx-auto" method="post" asp-controller="UserManagement" asp-action="ChangeUserBasicSettings" id="basicSettingsSection">
        <div style="width:66%;">
            <h4 class="text-center mb-3 mb-lg-4" data-testid="basicSettingsHeader">Βασικά Στοιχεία Λογαριασμού</h4>
            <div class="mb-4">
                <label class="form-label" asp-for="EditUserAccountBasicSettingsViewModel.FirstName">
                    <i class="fa-solid fa-user me-2"></i>Όνομα
                </label>
                <div class="input-group">
                    <input type="text" class="form-control" asp-for="EditUserAccountBasicSettingsViewModel.FirstName" value="@Model.EditUserAccountBasicSettingsViewModel.FirstName" data-testid="firstNameInput" readOnly>
                    <a class="btn btn-primary" id="firstNameEditButton" onclick="toggleInputField('EditUserAccountBasicSettingsViewModel_FirstName', 'firstNameEditButton')" data-testid="firstNameEditButton">
                        <i class="fa-solid fa-pencil"></i>
                    </a>
                </div>
                <span asp-validation-for="EditUserAccountBasicSettingsViewModel.FirstName" class="text-danger"></span>
            </div>
            <div class="mb-4">
                <label class="form-label" asp-for="EditUserAccountBasicSettingsViewModel.LastName">
                    <i class="fa-solid fa-user me-2"></i>Επώνυμο
                </label>
                <div class="input-group">
                    <input type="text" class="form-control" asp-for="EditUserAccountBasicSettingsViewModel.LastName" value="@Model.EditUserAccountBasicSettingsViewModel.LastName" data-testid="lastNameInput" readOnly>
                    <a class="btn btn-primary" id="lastNameEditButton" onclick="toggleInputField('EditUserAccountBasicSettingsViewModel_LastName', 'lastNameEditButton')" data-testid="lastNameEditButton">
                        <i class="fa-solid fa-pencil"></i>
                    </a>
                </div>
                <span asp-validation-for="EditUserAccountBasicSettingsViewModel.LastName" class="text-danger"></span>
            </div>
            <div class="mb-4">
                <label class="form-label" asp-for="EditUserAccountBasicSettingsViewModel.PhoneNumber">
                    <i class="fa-solid fa-phone me-2"></i>Τηλέφωνο
                </label>
                <div class="input-group">
                    <input type="text" class="form-control" asp-for="EditUserAccountBasicSettingsViewModel.PhoneNumber" value="@Model.EditUserAccountBasicSettingsViewModel.PhoneNumber" data-testid="phoneNumberInput" readOnly>
                    <a class="btn btn-primary" id="phoneNumberEditButton" onclick="toggleInputField('EditUserAccountBasicSettingsViewModel_PhoneNumber', 'phoneNumberEditButton')" data-testid="phoneNumberEditButton">
                        <i class="fa-solid fa-pencil"></i>
                    </a>
                </div>
                <span asp-validation-for="EditUserAccountBasicSettingsViewModel.PhoneNumber" class="text-danger"></span>
            </div>
            <div style="margin-bottom: 1.75rem;" class="d-flex align-items-center justify-content-between">
                <label class="form-check-label me-2 text-bigger" asp-for="EditUserAccountBasicSettingsViewModel.AccountActivated">Ενεργοποιημένος Λογαριασμός</label>
                <input class="form-check-input rounded-0" type="checkbox" asp-for="EditUserAccountBasicSettingsViewModel.AccountActivated" />
            </div>
            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-primary py-2 border-3" style="border-color:black !important; width: 70%;" id="changeBasicAccountSettingsButton" data-testid="changeBasicAccountSettingsButton">Επιβεβαίωση Αλλαγών</button>
            </div>
        </div>
        <input asp-for="EditUserAccountBasicSettingsViewModel.UserId" value="@Model.EditUserAccountBasicSettingsViewModel.UserId" hidden>
    </form>
    <div class="col-lg-4 d-lg-block d-none mx-auto" id="addressesSection">
        <h4 class="text-center mb-3 mb-lg-4">Διευθύνσεις Παράδοσης</h4>
        <p class="text-center">Work In Progress</p>
    </div>
    <div class="col-lg-4 d-lg-block col-12 flex-column align-items-center d-none mx-auto" id="sensitiveSettingsSection">
        <div style="width:66%;">
            <h4 class="text-center mb-3 mb-lg-4" data-testid="sensitiveSettingsHeader">Ευαίσθητα Στοιχεία Λογαριασμού</h4>
            <div class="mb-4">
                <label class="form-label" for="passwordInput">
                    <i class="fa-solid fa-lock me-2"></i>Συνθηματικό
                </label>
                <div class="input-group">
                    <input class="form-control" id="passwordInput" type="password" readOnly>
                    <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#changePasswordModal" data-testid="changePasswordModalTriggerButton">
                        <i class="fa-solid fa-pencil"></i>
                    </a>
                </div>
            </div>
            <div class="mb-4">
                <label class="form-label" for="emailInput">
                    <i class="fa-solid fa-envelope me-2"></i>Διεύθυνση e-mail
                </label>
                <div class="input-group">
                    <input class="form-control" id="emailInput" type="email" value="@Model.EditUserEmailAccountViewModel.OldEmail" readOnly>
                    <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#changeEmailModal" data-testid="changeEmailModalTriggerButton">
                        <i class="fa-solid fa-pencil"></i>
                    </a>
                </div>
            </div>
            @if(roles is not null)
            {
                <div class="mb-4">
                    <label class="form-label" for="roleInput">
                        <i class="fa-solid fa-user-gear me-2"></i>Ρόλος Χρήστη
                    </label>
                    <div class="input-group">
                        <input class="form-control" id="roleInput" type="text" value="@userRoleName" readOnly>
                        <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#changeUserRoleModal" data-testid="changeUserRoleModalTriggerButton">
                            <i class="fa-solid fa-pencil"></i>
                        </a>
                    </div>
                </div>
            }
            <div id="accountDeletionSubsection">
                <h5 class="text-center">Διαγραφή Λογαριασμού</h5>
                <p class="text-start" style="font-size:15px;">Μπορείτε να διαγράψατε τον λογαριασμό του χρήστη πατώντας το παρακάτω κουμπί. Προσοχή η παρακάτω ενέργεια είναι μη αναστρέψιμη!<p/>
                <a class="d-block mx-auto btn btn-primary py-2 border-3" id="deleteAccountButton" style="border-color:black !important; width: 70%;" 
                    data-bs-toggle="modal" data-bs-target="#deleteAccountModal" data-testid="deleteAccountModalTriggerButton">Διαγραφή</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade custom-center-modal" id="changePasswordModal" tabindex="-1">
    <div class="modal-dialog">
        <form class="modal-content" method="post" asp-controller="UserManagement" asp-action="ChangeUserPassword" id="changeUserPasswordForm">
            <div class="modal-header">
                <h5 class="modal-title">Αλλαγή Συνθηματικού Χρήστη</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-4">
                    <label asp-for="EditUserPasswordViewModel.NewPassword" class="form-label"><i class="fa-solid fa-lock me-2"></i>Νέο Συνθηματικό</label>
                    <input class="form-control" asp-for="EditUserPasswordViewModel.NewPassword" placeholder="Enter new password" type="password" data-testid="newPasswordInput">
                    <span asp-validation-for="EditUserPasswordViewModel.NewPassword" class="text-danger"></span>
                </div>

                <label asp-for="EditUserPasswordViewModel.ConfirmNewPassword" class="form-label"><i class="fa-solid fa-lock me-2"></i>Επιβεβαίωση Νέου Συνθηματικού</label>
                <input class="form-control" asp-for="EditUserPasswordViewModel.ConfirmNewPassword" placeholder="Confirm new password" type="password" data-testid="confirmNewPasswordInput">
                <span asp-validation-for="EditUserPasswordViewModel.ConfirmNewPassword" class="text-danger"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-testid="cancelChangePasswordButton">Ακύρωση</button>
                <button type="submit" class="btn btn-primary" id="changePasswordButton" data-testid="changePasswordButton">Συνέχεια</button>
            </div>
            <input asp-for="EditUserPasswordViewModel.UserId" value="@Model.EditUserPasswordViewModel.UserId" hidden>
        </form>
    </div>
</div>
<div class="modal fade custom-center-modal" id="changeEmailModal" tabindex="-1">
    <div class="modal-dialog">
        <form class="modal-content" method="post" asp-controller="UserManagement" asp-action="ChangeUserEmailAccount" id="changeUserEmailAccountForm">
            <div class="modal-header">
                <h5 class="modal-title">Αλλαγή Ηλεκτρονικού Ταχυδρομείου Χρήστη</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <label for="modalEmailInput" class="form-label"><i class="fa-solid fa-lock me-2"></i>Διεύθυνση e-mail Λογαριασμού</label>
                <input class="form-control mb-4" id="modalEmailInput" type="email" value="@Model.EditUserEmailAccountViewModel.OldEmail" readOnly>
                <label asp-for="EditUserEmailAccountViewModel.NewEmail" class="form-label"><i class="fa-solid fa-lock me-2"></i>Νέα Διεύθυνση e-mail Λογαριασμού</label>
                <input class="form-control" asp-for="EditUserEmailAccountViewModel.NewEmail" placeholder="Enter new email address" type="email" data-testid="newEmailInput">
                <span asp-validation-for="EditUserEmailAccountViewModel.NewEmail" class="text-danger"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-testid="cancelChangeEmailButton">Ακύρωση</button>
                <button type="submit" class="btn btn-primary" id="changeEmailButton" data-testid="changeEmailButton">Συνέχεια</button>
            </div>
            <input asp-for="EditUserEmailAccountViewModel.UserId" value="@Model.EditUserEmailAccountViewModel.UserId" hidden>
        </form>
    </div>
</div>
@if(roles is not null)
{
    <div class="modal fade custom-center-modal" id="changeUserRoleModal" tabindex="-1">
        <div class="modal-dialog">
            <form class="modal-content" method="post" asp-controller="UserManagement" asp-action="ChangeUserRole" id="changeUserRoleForm">
                <div class="modal-header">
                    <h5 class="modal-title">Αλλαγή Ρόλου Χρήστη</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <label for="modalUserRoleInput" class="form-label"><i class="fa-solid fa-user-gear me-2"></i>Ρόλος Χρήστη</label>
                    <input class="form-control mb-4" id="modalUserRoleInput" type="email" value="@userRoleName" readOnly>

                    <label class="form-label" id="roleLabel"><i class="fa-solid fa-user-gear me-2"></i>Νέος Ρόλος Χρήστη</label>
                    <div class="dropdown">
                        <button class="form-select text-start custom-outline" type="button" id="roleDropdownButton" data-bs-toggle="dropdown" aria-expanded="false">Επιλέξτε Νέο Ρόλο Χρήστη</button>
                        <ul class="dropdown-menu w-100 py-0" aria-labelledby="roleDropdownButton" id="rolesDropdown">
                            @foreach (UiRole role in roles)
                            {
                                if(role.Id != Model.EditUserRoleViewModel.CurrentRoleId)
                                {
                                    <li><a class="dropdown-item" href="#" data-value="@role.Id">@role.Name</a></li>
                                }
                            }
                        </ul>
                    </div>
                    <span class="text-danger" id="roleDropdownValidationSpan"></span>

                    @* Here pass in also the user id *@
                    <input type="hidden" asp-for="EditUserRoleViewModel.CurrentRoleId" value="@Model.EditUserRoleViewModel.CurrentRoleId">
                    <input type="hidden" asp-for="EditUserRoleViewModel.NewRoleId" value="" id="SelectedRole">
                    <input type="hidden" asp-for="EditUserRoleViewModel.UserId" value="@Model.EditUserRoleViewModel.UserId">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-testid="cancelChangeUserRoleButton">Ακύρωση</button>
                    <button type="submit" class="btn btn-primary" id="changeUserRoleButton" data-testid="changeUserRoleButton">Συνέχεια</button>
                </div>
            </form>
        </div>
    </div>
}
<div class="modal fade custom-center-modal" id="deleteAccountModal" tabindex="-1">
    <div class="modal-dialog">
        <form class="modal-content" method="post" asp-controller="UserManagement" asp-action="DeleteUserAccount" id="deleteUserAccountForm">
            <div class="modal-header">
                <h5 class="modal-title">Επιβεβαίωση Διαγραφής Λογαριασμού</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <strong style="font-size: 18px;">Η παρακάτω ενέργεια δεν είναι αντιστρέψιμη!</strong>
                <p>Αν είστε σίγουροι πως θέλετε να διαγράψατε τον λογαριασμό του χρήστη παρακαλώ συμπληρώστε το email του λογαριασμού του και πατήστε συνέχεια.</p>
                <p>Ο χρήστης θα ενημερωθεί για την διαγραφή του λογαριασμού του μέσω email.</p>
                <label for="modalDeleteAccountInput" class="form-label"><i class="fa-solid fa-envelope me-2"></i>Διεύθυνση e-mail Λογαριασμού</label>
                <input class="form-control" id="modalDeleteAccountInput" type="email" data-custom-validation="false" data-testid="emailInput">
                <span id="modalDeleteAccountInputValidation" class="text-danger"></span>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-testid="cancelDeleteAccountButton">Ακύρωση</button>
                <button type="submit" class="btn btn-primary" id="deleteUserAccountButton" data-testid="deleteUserAccountButton">Συνέχεια</button>
            </div>
            <input type="hidden" value="@Model.EditUserEmailAccountViewModel.OldEmail" name="userEmail">
            <input type="hidden" value="@Model.EditUserRoleViewModel.UserId" name="userId">
        </form>
    </div>
</div>

<div class="modal fade custom-center-modal modal-result" data-bs-backdrop="static" id="resultModal" data-testid="resultModal" data-popUpValue="" tabindex="-1">
    <div class="modal-dialog modal-confirm">
        <div class="modal-content">
            <div class="modal-header border-0">
                <div class="icon-box">
                    <i class="fas fa-check"></i>
                </div>
                <h4 class="modal-title w-100" id="myModalLabel"></h4>
            </div>
            <div class="modal-body">
                <p class="text-center"></p>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button class="btn btn-primary w-75" data-bs-dismiss="modal" data-testid="resultModalCloseButton">Εντάξει</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="~/js/customValidation.js"></script>
<script type="text/javascript" src="~/js/customModals.js"></script>

<script>
    function updateFormSizeClasses() {
        const basicSettingsSection = document.getElementById("basicSettingsSection");
        const addressesSection = document.getElementById("addressesSection");
        const sensitiveSettingsSection = document.getElementById("sensitiveSettingsSection");
        const changeBasicAccountSettingsButton = document.getElementById("changeBasicAccountSettingsButton");
        const deleteAccountButton = document.getElementById("deleteAccountButton");
        const accountDeletionSubsectionText = document.getElementById("accountDeletionSubsection").querySelector("p");

        if (window.innerWidth >= 992) {
            basicSettingsSection.firstElementChild.style.width = "";
            addressesSection.firstElementChild.style.width = "";
            sensitiveSettingsSection.firstElementChild.style.width = "";
        }
        else {
            basicSettingsSection.firstElementChild.style.width = "66%";
            addressesSection.firstElementChild.style.width = "66%";
            sensitiveSettingsSection.firstElementChild.style.width = "66%";
        }

        //992 is bootstrap endpoint
        if ((window.innerWidth < 576) || (window.innerWidth >= 992 && window.innerWidth < 1220)) {
            changeBasicAccountSettingsButton.textContent = "Επιβεβαίωση";
            deleteAccountButton.textContent = "Διαγραφή";
            accountDeletionSubsectionText.textContent = "Μπορείτε να διαγράψατε τον λογαριασμό του χρήστη πατώντας το παρακάτω κουμπί."
        }
        else{
            changeBasicAccountSettingsButton.textContent = "Επιβεβαίωση Αλλαγών";
            deleteAccountButton.textContent = "Διαγραφή Λογαριασμού";
            accountDeletionSubsectionText.textContent = "Μπορείτε να διαγράψατε τον λογαριασμό του χρήστη πατώντας το παρακάτω κουμπί. Προσοχή η παρακάτω ενέργεια είναι μη αναστρέψιμη!"
        }

        if (window.innerWidth >= 576 && window.innerWidth < 992) {
            basicSettingsSection.style.maxWidth = "500px";
            sensitiveSettingsSection.style.maxWidth = "500px";
        }
        else if(window.innerWidth >= 992){
            sensitiveSettingsSection.style.maxWidth = "450px";
            basicSettingsSection.style.maxWidth = "450px";
        }
        else{
            sensitiveSettingsSection.style.maxWidth = "";
            basicSettingsSection.style.maxWidth = "";
        }
    }

    window.addEventListener("load", updateFormSizeClasses);
    window.addEventListener("resize", updateFormSizeClasses);

    //this just adds a guid to the password field
    function generateGUID() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            const r = Math.random() * 16 | 0;
            const v = c === 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }

    window.addEventListener('DOMContentLoaded', () => {
        const passwordInput = document.getElementById('passwordInput');
        passwordInput.value = generateGUID();
    });

    // Edit button functionality
    function toggleInputField(inputId, buttonId) {
        let inputField = document.getElementById(inputId);
        let button = document.getElementById(buttonId);

        if (inputField && button) {
            if (inputField.readOnly) {
                inputField.readOnly = false;
                button.innerHTML = '<i class="fa-solid fa-check"></i>';
            } else {
                inputField.readOnly = true;
                button.innerHTML = '<i class="fa-solid fa-pencil"></i>';
            }
        }
    }

    setUpValidationListeners();
    setUpFormSubmissionValidationListener("basicSettingsSection");
    setUpFormSubmissionValidationListener("changeUserPasswordForm");
    setUpFormSubmissionValidationListener("changeUserEmailAccountForm");

    function toggleAuthenticationForm(section) {
        //if section that is now active is signInForm
        if (section === 'basicSettingsSection') {
            document.getElementById('btnBasicSettings').classList.replace('inactive', 'active');
            document.getElementById('btnSensitiveSettings').classList.replace('active', 'inactive');

            document.getElementById("basicSettingsSection").classList.replace('d-none', 'd-flex');
            document.getElementById("sensitiveSettingsSection").classList.replace('d-flex', 'd-none');
        }
        //if section that is now active is signUpForm
        else if(section === 'sensitiveSettingsSection'){
            document.getElementById('btnSensitiveSettings').classList.replace('inactive', 'active');
            document.getElementById('btnBasicSettings').classList.replace('active', 'inactive');

            document.getElementById("sensitiveSettingsSection").classList.replace('d-none', 'd-flex');
            document.getElementById("basicSettingsSection").classList.replace('d-flex', 'd-none');
        }
    }

    let modalDeleteAccountInput = document.getElementById('modalDeleteAccountInput');
    let modalDeleteAccountInputValidation = document.getElementById('modalDeleteAccountInputValidation');
    let oldEmail = '@Model.EditUserEmailAccountViewModel.OldEmail';

    modalDeleteAccountInput.addEventListener("focusout", function () {
        modalDeleteAccountInput.setAttribute('data-custom-validation', 'true');
        //if there are more validation errors and the checkpasswordmatch had errors, it is going to be overriden as intended
        if(modalDeleteAccountInput.value === ""){
            modalDeleteAccountInputValidation.textContent = "This field is required";
        }
        else if (modalDeleteAccountInput.value !== oldEmail) {
            modalDeleteAccountInputValidation.textContent = "The provided value does not match the user account's email";
        }
        else {
            modalDeleteAccountInputValidation.textContent = '';
        }
    });

    modalDeleteAccountInput.addEventListener("input", function () {
        //if there are more validation errors and the checkpasswordmatch had errors, it is going to be overriden as intended
        if (modalDeleteAccountInput.value === "" && modalDeleteAccountInput.getAttribute('data-custom-validation') === 'true') {
            modalDeleteAccountInputValidation.textContent = "This field is required";
        }
        else if (modalDeleteAccountInput.value !== oldEmail && modalDeleteAccountInput.getAttribute('data-custom-validation') === 'true') {
            modalDeleteAccountInputValidation.textContent = "The provided value does not match the user account's email";
        }
        else if (modalDeleteAccountInput.value === oldEmail && modalDeleteAccountInput.getAttribute('data-custom-validation') === 'true') {
            modalDeleteAccountInputValidation.textContent = '';
        }
    });

    document.getElementById("deleteUserAccountForm").addEventListener('submit', function (e) {
        if (modalDeleteAccountInput.getAttribute('data-custom-validation') !== 'true' || modalDeleteAccountInputValidation.textContent !== '') {
            if (modalDeleteAccountInput.value === "") {
                modalDeleteAccountInputValidation.textContent = "This field is required";
            }

            e.preventDefault();
        }
    });

    /* ChangeRole dropdown functionality and validation */
    let roleDropdownButton = document.getElementById('roleDropdownButton');
    let roleDropdownValidationSpan = document.getElementById('roleDropdownValidationSpan');

    document.getElementById("changeUserRoleForm").addEventListener('submit', function (e) {
        if (roleDropdownButton.textContent.trim() === "Επιλέξτε Νέο Ρόλο Χρήστη") {
            roleDropdownValidationSpan.textContent = "Please choose a valid new role";
            e.preventDefault();
        }
    });

    document.getElementById('roleLabel').addEventListener('click', function () {
        roleDropdownButton.focus();
    });

    const roleItems = document.querySelectorAll('.dropdown-menu .dropdown-item');
    const hiddenInput = document.getElementById('SelectedRole');

    roleItems.forEach(item => {
        item.addEventListener('click', function (e) {
            e.preventDefault();
            roleDropdownButton.textContent = this.textContent;
            hiddenInput.value = this.dataset.value;
            roleDropdownValidationSpan.textContent = "";
        });
    });
</script>

@section Scripts {
    <script>
        const passwordChangeSuccess = '@TempData["PasswordChangeSuccess"]' === 'True';
        const emailChangeSuccess = '@TempData["EmailChangeSuccess"]' === 'True';
        const roleChangeSuccess = '@TempData["RoleChangeSuccess"]' === 'True';
        const accountBasicSettingsChangeSuccess = '@TempData["AccountBasicSettingsChangeSuccess"]' === 'True';
        const duplicateEmail = '@TempData["DuplicateEmail"]' === 'True';
        const roleNotFoundWithGivenId = '@TempData["RoleNotFoundWithGivenId"]' === 'True';
        const passwordMismatchError = '@TempData["PasswordMismatchError"]' === 'True';
        const unknownError = '@TempData["UnknownError"]' === 'True';

        let resultModal = document.getElementById("resultModal");

        if(accountBasicSettingsChangeSuccess){
            resultModal.setAttribute("popUpValue", "accountBasicSettingsChangeSuccess");
            showPopUpModal("resultModal", "Επιτυχία Αλλαγής Στοιχείων", "Το βασικά στοιχεία του λογαριασμού του χρήστη ανανεώθηκαν επιτυχώς!", "Επιτυχία", "Το βασικά στοιχεία του λογαριασμού του χρήστη ανανεώθηκαν επιτυχώς!", "success");
        }
        else if (passwordChangeSuccess) {
            resultModal.setAttribute("popUpValue", "passwordChangeSuccess");
            showPopUpModal("resultModal", "Επιτυχία Αλλαγής Συνθηματικού", "Το συνθηματικό του λογαριασμού του χρήστη ανανεώθηκε επιτυχώς!", "Επιτυχία", "Το συνθηματικό του λογαριασμού του χρήστη ανανεώθηκε επιτυχώς!", "success");
        }
        else if (emailChangeSuccess) {
            resultModal.setAttribute("popUpValue", "emailChangeSuccess");
            showPopUpModal("resultModal", "Επιτυχία Αλλαγής Email", "Ο ηλεκτρονικός ταχυδρομικός λογαριασμός του χρήστη ανανεώθηκε επιτυχώς!", "Επιτυχία", "Ο ηλεκτρονικός ταχυδρομικός λογαριασμός του χρήστη ανανεώθηκε επιτυχώς!", "success");
        }
        else if (roleChangeSuccess) {
            resultModal.setAttribute("popUpValue", "roleChangeSuccess");
            showPopUpModal("resultModal", "Επιτυχία Αλλαγής Ρόλου", "Ο ρόλος του χρήστη ανανεώθηκε επιτυχώς!", "Επιτυχία", "Ο ρόλος του χρήστη ανανεώθηκε επιτυχώς!!", "success");
        }
        else if (duplicateEmail) {
            resultModal.setAttribute("popUpValue", "duplicateEmail");
            showPopUpModal('resultModal', "Αποτυχία Αλλαγής e-mail", "Η νέα διεύθυνση ηλεκτρονικού ταχυδρομείου που θέλετε να χρησιμοποιήσετε για τον λογαριασμό χρήστη υπάρχει στο σύστημα μας και χρησιμοποιείται από άλλο λογαριασμό. " +
                "Παρακαλώ δοκιμάστε ξανά με διαφορετική διεύθυνση ηλεκτρονικού ταχυδρομείου. " +
                "Σε περίπτωση που αντιμετωπίζετε πρόβλημα παρακαλώ επικοινωνήστε μαζί μας μέσω του email υποστήριξης μας kinnaskonstantinos0@gmail.com.",
                "Αποτυχία", "Η νέα διεύθυνση ηλεκτρονικού ταχυδρομείου που θέλετε να χρησιμοποιήσετε για τον λογαριασμό χρήστη υπάρχει στο σύστημα μας και χρησιμοποιείται από άλλο λογαριασμό. " + 
                "Παρακαλώ δοκιμάστε ξανά με διαφορετική διεύθυνση ηλεκτρονικού ταχυδρομείου.");
        }
        else if (roleNotFoundWithGivenId) {
            resultModal.setAttribute("popUpValue", "duplicateEmail");
            showPopUpModal('resultModal', "Αποτυχία Αλλαγής Ρόλου", "Ο ρόλος του χρήστη δεν μπόρεσε να ανανεωθεί, γιατί ο νέος ρόλος δεν βρέθηκε στο σύστημα. Παρακαλώ δοκιμάστε με διαφορετικό ρόλο ή δοκιμάστε αργότερα. " +
                "Σε περίπτωση που αντιμετωπίζετε πρόβλημα παρακαλώ επικοινωνήστε μαζί μας μέσω του email υποστήριξης μας kinnaskonstantinos0@gmail.com.",
                "Αποτυχία", "Ο ρόλος του χρήστη δεν μπόρεσε να ανανεωθεί, γιατί ο νέος ρόλος δεν βρέθηκε στο σύστημα. Παρακαλώ δοκιμάστε με διαφορετικό ρόλο ή δοκιμάστε αργότερα.");
        }
        else if (unknownError) {
            resultModal.setAttribute("popUpValue", "unknownError");
            showPopUpModal('resultModal', "Αποτυχία Αλλαγής Συνθηματικού", "Κάποιο πρόβλημα συνέβη με τα δεδομένα που δώσατε. Παρακαλώ δοκιμάστε ξανά με διαφορετικά δεδομένα ή δοκιμάστε αργότερα.",
                "Αποτυχία", "Απρόβλεπρο πρόβλημα. Παρακαλώ δοκιμάστε ξανά με διαφορετικά δεδομένα.");
        }
    </script>
}